---

- name: Install libvoikko
  shell: yum -y install libvoikko-3.6 warn=false

- name: Create /etc/voikko directory
  file:
    path: /etc/voikko
    state: directory

- name: Download dict-morphoid.zip
  get_url:
    url: http://www.puimula.org/htp/testing/voikko-snapshot/dict-morphoid.zip
    dest: /tmp/dict-morphoid.zip
    checksum: sha256:7927c030e233f71623c54e3a26514681e6f8da8a4b8f3cd1a9606423ef5f7327

- name: Unarchive dict-morphoid.zip to /etc/voikko/
  unarchive:
    src: /tmp/dict-morphoid.zip
    dest: /etc/voikko
    remote_src: yes

- name: Create solr-user
  user:
    name: solr
    state: present
    createhome: yes
    password_lock: yes

- name: Create solr data dir to /data/solr
  file:
    path: /data/solr
    state: directory
    owner: solr
    group: solr

- name: Clone finna-solr repository from github
  git: repo=https://github.com/cscfi/finna-solr dest=/home/solr/finna-solr version="{{ solr.finna_solr_commit }}"
  become_user: solr

- name: Run install_solr.sh
  command: ./install_solr.sh
  args:
    chdir: /home/solr/finna-solr/

# note: using /bin/cp, since "cp" is an alias for "cp -i"
- name: Copy finna-solr/vufind directory to /data/solr/
  command: /bin/cp -r /home/solr/finna-solr/vufind /data/solr/

# note: using /bin/cp, since "cp" is an alias for "cp -i"
- name: Copy finna-solr/vendor directory to /data/solr/
  command: /bin/cp -r /home/solr/finna-solr/vendor /data/solr/

- name: Copy vufind/solr.in.finna.sh.sample to vufind/solr.in.finna.sh
  command: cp /data/solr/vufind/solr.in.finna.sh.sample /data/solr/vufind/solr.in.finna.sh

- name: Modify solr.in.finna.sh - Set Java home
  replace:
    path: "/data/solr/vufind/solr.in.finna.sh"
    regexp: "#SOLR_JAVA_HOME=\"\""
    replace: "SOLR_JAVA_HOME=\"{{ ansible_local['java']['general']['home'] }}\""

# - name: Java home from ansible facts is...
#   debug: msg="{{ ansible_local['java']['general']['home'] }}"

- name: Modify solr.in.finna.sh - SOLR Java memory to 512m
  replace:
    path: "/data/solr/vufind/solr.in.finna.sh"
    regexp: "SOLR_JAVA_MEM=\"-Xms16G -Xmx16G\""
    replace: "SOLR_JAVA_MEM=\"{{ solr.solr_java_mem }}\""

- name: Modify solr.in.finna.sh - SOLR_HOST to internal ip
  replace:
    path: "/data/solr/vufind/solr.in.finna.sh"
    regexp: "SOLR_HOST=\"`hostname`\""
    replace: "SOLR_HOST=\"{{ ansible_default_ipv4.address }}\""

- name: Modify solr.in.finna.sh - Set ZooKeeper connection string
  replace:
    path: "/data/solr/vufind/solr.in.finna.sh"
    regexp: "ZK_HOST=\"`hostname`:2181\""
    replace: "ZK_HOST=\"{{ indexserver_1_internal_ip }}:{{ zookeeper.client_port }},{{ indexserver_2_internal_ip }}:{{ zookeeper.client_port }},{{ indexserver_3_internal_ip }}:{{ zookeeper.client_port }}\""
  when: secrets.indexservers.solr_cluster == True


- name: Solr standalone settings
  block:

  - name: Modify solr.in.finna.sh - Disable solrcloud
    replace:
      path: "/data/solr/vufind/solr.in.finna.sh"
      regexp: "SOLR_MODE=solrcloud"
      replace: "# SOLR_MODE=solrcloud"

  - name: Modify solr.in.finna.sh - Disable ZooKeeper connection string
    replace:
      path: "/data/solr/vufind/solr.in.finna.sh"
      regexp: "ZK_HOST=\"`hostname`:2181\""
      replace: "# ZK_HOST=\"`hostname`:2181\""

  - name: Load biblio-core by renaming core.properties.sample to core.properties
    command: mv core.properties.sample core.properties
    args:
      chdir: /data/solr/vufind/biblio/
      creates: /data/solr/vufind/biblio/core.properties

  when: secrets.indexservers.solr_cluster == False


- name: Modify schema.xml - set uniqueKey to _document_id
  replace:
    path: "/data/solr/vufind/biblio/conf/schema.xml"
    regexp: "<uniqueKey>id</uniqueKey>"
    replace: "<uniqueKey>_document_id</uniqueKey>"

- name: Modify schema.xml - Add new field _document_id
  lineinfile:
    path: "/data/solr/vufind/biblio/conf/schema.xml"
    insertbefore: "<uniqueKey>_document_id</uniqueKey>"
    line: '  <field name="_document_id" type="string" indexed="true" stored="true" docValues="true"/>'

- name: chown /data/solr to solr-user
  file:
    dest: /data/solr
    owner: solr
    group: solr
    recurse: yes

- name: Copy vufind/solr.service to /etc/systemd/system/
  command: cp /data/solr/vufind/solr.service /etc/systemd/system/solr.service

- name: Ensure solr.service file permissions
  file:
    dest: /etc/systemd/system/solr.service
    owner: root
    group: root
    mode: 0644

- name: Start solr service
  service: name=solr state=restarted enabled=yes

# 'uri' module interacts with webservices from target host (that's why 'localhost' works)
- name: Wait for Solr service to start...
  uri:
    url: 'http://localhost:{{ solr.port }}/solr/biblio/select?fl=id&q=*:*&rows=5'
  retries: 20
  delay: 1
  register: solr_response
  until: solr_response.status == 200
  run_once: True

- name: Solr cloud - Load core, collection, configuration
  block:

    - name: Load biblio core using zookeeper
      command: "/data/solr/vendor/bin/solr zk upconfig -n biblio -d /data/solr/vufind/biblio/conf"
      environment:
        SOLR_INCLUDE: /data/solr/vufind/solr.in.finna.sh

    - name: Create Solr collection
      uri:
        url: 'http://localhost:{{ solr.port }}/solr/admin/collections?action=CREATE&name=biblio&numShards=3&replicationFactor=1&collection.configName=biblio'
      register: solr_response_cr
      failed_when: solr_response_cr.status != 200 and "collection already exists" not in solr_response_cr.content

    - name: Reload Solr configuration
      uri:
        url: 'http://localhost:{{ solr.port }}/solr/admin/collections?action=RELOAD&name=biblio'

  when: secrets.indexservers.solr_cluster == True
  run_once: True

- name: Load testdata.json into index
  uri:
    url: 'http://localhost:{{ solr.port }}/solr/biblio/update'
    method: POST
    body: "{{ lookup('file', 'testdata.json')}}"
    body_format: json
  retries: 3
  delay: 3
  register: solr_response_u
  until: solr_response_u.status == 200 and solr_response_u.json.responseHeader.status == 0
  when: deployment_environment_id in ['local_development', 'test']
  run_once: True
