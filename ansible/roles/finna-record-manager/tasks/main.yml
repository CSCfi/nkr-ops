---

- name: Make sure we have a 'wheel' group
  group: name=wheel state=present

# TODO: role 'users' removes 'nkr-user' and this adds it again. when modifying role 'users' note that indexservers
# TODO: don't use 'nkr-user'
- name: Add users that should be able to log in to OS
  user: name="{{ nkr_user }}" groups=wheel append=yes state=present createhome=yes

- name: Add index hosts to /etc/hosts
  import_role:
    name: etc_hosts
  vars:
    ip_list: "{{ index_ip_list }}"
    host_list: "{{ index_host_list }}"
  when: deployment_environment_id in ['test', 'pentest']

# repo for rh-php
- name: Install centos-release-scl software collections
  shell: yum -y install centos-release-scl warn=false

- name: Install PHP {{php_version}}
  shell: "yum -y install {{ item }} warn=false"
  with_items:
    - rh-php{{php_version}}
    - rh-php{{php_version}}-php-pear
    - rh-php{{php_version}}-php-xml
    - rh-php{{php_version}}-php-devel
    - rh-php{{php_version}}-php-mbstring
    - rh-php{{php_version}}-php-intl

- name: Import mongodb role
  import_role: name=mongodb

- name: Clone RecordManager
  git:
    repo: 'https://github.com/CSCfi/RecordManager.git'
    version: "{{ harvester.branch }}"
    dest: /usr/local/RecordManager/
    update: yes

- name: Copy Composer install script into place
  copy:
    src: install_composer.sh
    dest: /usr/local/RecordManager/
    mode: '655'

- name: Install Composer
  shell: echo "./install_composer.sh" | scl enable rh-php{{php_version}} -
  args:
    chdir: /usr/local/RecordManager

- name: Install requirements with Software Collections enabled PHP
  shell: echo "./composer.phar update" | scl enable rh-php{{php_version}} -
  args:
    chdir: /usr/local/RecordManager

- name: Ensure MongoDB is running
  service: name=mongod state=started enabled=yes

- name: Create indices with dbscripts/mongo.js
  command: mongo recman dbscripts/mongo.js
  args:
    chdir: /usr/local/RecordManager

- name: Create recordmanager.ini from template
  template:
    src: recordmanager.ini
    dest: /usr/local/RecordManager/conf/recordmanager.ini

- name: Create datasources.ini from template and configure
  template:
    src: templates/datasources.ini
    dest: /usr/local/RecordManager/conf/datasources.ini

- name: Create abbreviations file from template
  command: cp conf/abbreviations.lst.sample conf/abbreviations.lst
  args:
    chdir: /usr/local/RecordManager

- name: Create articles file from template
  command: cp conf/articles.lst.sample conf/articles.lst
  args:
    chdir: /usr/local/RecordManager

- name: Copy AHAA specific mapping files into place
  copy:
    src: "{{ item }}"
    dest: /usr/local/RecordManager/mappings/
  with_items:
    - ahaa_level_to_format.map
    - building_ahaa.map
    - institution_ahaa.map

- name: Create mappings file from template mappings/ead_level_to_format.map.sample
  command: cp mappings/ead_level_to_format.map.sample mappings/ead_level_to_format.map
  args:
    chdir: /usr/local/RecordManager
    
- name: Create usage_rights file from template
  command: cp mappings/usage_rights.map.sample mappings/usage_rights.map
  args:
    chdir: /usr/local/RecordManager
        
- name: Create language_codes file from template
  command: cp mappings/language_codes.map.sample mappings/language_codes.map
  args:
    chdir: /usr/local/RecordManager        

- name: Install manual harvesting helper scripts
  copy:
    src: "{{ item }}"
    dest: /usr/local/RecordManager/
  with_items:
    - harvest_scripts/empty_harvest_source.sh
    - harvest_scripts/reharvest.sh
  when: deployment_environment_id in ['local_development', 'test', 'pentest']

- block:

    - name: Test importing with test EAD xml and print output
      shell: echo "php import.php --file=/shared/ansible/roles/finna-record-manager/files/test_xmls/julkinen-ead.xml --source=local_ead" | scl enable rh-php{{php_version}} -
      args:
        chdir: /usr/local/RecordManager
      register: ps

    - debug: var=ps.stdout_lines
    
    - name: Test updating the Solr index print output
      shell: echo "php manage.php --func=updatesolr" | scl enable rh-php{{php_version}} -
      args:
        chdir: /usr/local/RecordManager
      register: ps2

    - debug: var=ps2.stdout_lines


    - name: Set log file permissions for developer CLI usage
      file:
        path: /var/log/recman.log
        owner: vagrant
        group: vagrant

    - name: Copy bash aliases to {{ nkr_user }} user home dir
      template: src=templates/bash_harvester_aliases dest=/home/{{ nkr_user }}/.bash_harvester_aliases owner={{ nkr_user }} group={{ nkr_user }}

    - name: Touch {{ nkr_user }} .bash_profile
      file: path=/home/{{ nkr_user }}/.bash_profile owner={{ nkr_user }} group={{ nkr_user }} state=touch

    - name: Add printing of bash aliases to {{ nkr_user }} profile
      lineinfile:
        dest: "/home/{{ nkr_user }}/.bash_profile"
        insertafter: "source .bash_proxy_aliases"
        line: "source .bash_harvester_aliases"
        state: present

    - name: Display additional instructions for local dev environment
      debug:
        msg:
          - "Set your local VS Code IDE to connect PHP in your VM."
          - "Install 'Remote Development' by Microsoft into your VS Code."
          - "Append to your ~/.ssh/config roles/finna-record-manager/files/vscode_conf/config.ssh-template"
          - "Connect to your VM from VS Code."
          - "..."
          - "Add PHP configuration when asked from <roles/.../.json>"
          - "~/.vscode-server/data/Machine/settings.json"
          - "See also: https://code.visualstudio.com/docs/remote/ssh"

  when: deployment_environment_id in ['local_development']
